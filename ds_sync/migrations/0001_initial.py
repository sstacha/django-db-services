# Generated by Django 3.0.8 on 2021-12-01 21:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertCategoryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'verbose_name': 'Sync Alert Category',
                'verbose_name_plural': 'Sync Alert Categories',
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='ConfigurationChannelTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'verbose_name': 'Sync Configuration Channel',
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='SyncConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_connection_name', models.CharField(choices=[('default', 'default'), ('web_cache', 'web_cache'), ('enterprise_data', 'enterprise_data'), ('eva', 'eva'), ('events', 'events'), ('publications', 'publications'), ('web', 'web')], max_length=255, verbose_name='from connection')),
                ('to_connection_name', models.CharField(choices=[('default', 'default'), ('web_cache', 'web_cache'), ('enterprise_data', 'enterprise_data'), ('eva', 'eva'), ('events', 'events'), ('publications', 'publications'), ('web', 'web')], max_length=255, verbose_name='to connection')),
                ('table_name', models.CharField(help_text='Table name to sync', max_length=800, verbose_name='table')),
                ('pk_field_name', models.CharField(default='id', help_text="Primary key field name.  While this doesn't have to be a primary key it does have to be unique indexed to only return one row.", max_length=800, verbose_name='primary key')),
                ('notes', models.TextField(blank=True, max_length=2000, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('log_level_override', models.PositiveSmallIntegerField(blank=True, choices=[(10, 'Debug'), (20, 'Info'), (30, 'Warning')], help_text='Alters the log level for the log output per sync', null=True)),
                ('channels', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text="Allows syncing by group(s) of configurations.  Ex: 'daily', 'weekly' or 'customer, daily'", to='ds_sync.ConfigurationChannelTag')),
            ],
            options={
                'ordering': ['-is_active', 'from_connection_name', 'to_connection_name'],
                'unique_together': {('from_connection_name', 'to_connection_name', 'table_name')},
            },
        ),
        migrations.CreateModel(
            name='SyncRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('has_succeeded', models.BooleanField(null=True)),
                ('log', models.TextField(blank=True, null=True)),
                ('sync', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ds_sync.SyncConfiguration')),
            ],
            options={
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SyncAlert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('after_failure_cnt', models.PositiveSmallIntegerField(default=1, help_text='Number of failures before alert is triggered (1-25).', validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('last_alert_date', models.DateTimeField(blank=True, help_text='Saved after each alert.  Used to determine if new alerts are sent.', null=True)),
                ('email_list', models.CharField(blank=True, help_text='Comma separated list of email addresses to receive alert.', max_length=2048, null=True)),
                ('category', tagulous.models.fields.SingleTagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text="Single keyword category the alert can be assigned to for schedulingEx: 'daily' or 'weekly' or 'monthly'", null=True, on_delete=django.db.models.deletion.CASCADE, to='ds_sync.AlertCategoryTag')),
                ('sync', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ds_sync.SyncConfiguration')),
            ],
            options={
                'ordering': ['sync', 'category', 'after_failure_cnt'],
            },
        ),
    ]
